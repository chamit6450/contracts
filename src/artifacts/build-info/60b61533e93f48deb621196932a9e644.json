{
	"id": "60b61533e93f48deb621196932a9e644",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/Bridge.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ninterface IBUSDT is IERC20 {\n    function mint(address _to, uint256 _amount) external;\n    function burn(address _from, uint256 _amount) external;\n}\n\ncontract Bridge is Ownable{\n   uint256 public balance;\n    address public tokenAddress;\n\n    event Burn(address indexed burner, uint amount);\n\n    mapping(address => uint256) public pendingBalance;\n\n    constructor(address _tokenAddress) Ownable(msg.sender) {\n        tokenAddress = _tokenAddress;\n    }\n\n     function mint(IBUSDT _tokenAddress, uint256 _amount) public {\n        require(pendingBalance[msg.sender] >= _amount);\n        pendingBalance[msg.sender] -= _amount;\n        _tokenAddress.mint(msg.sender, _amount);\n    }\n\n   function burn(IBUSDT _tokenAddress, uint256 _amount) public {\n        require(address(_tokenAddress) == tokenAddress);\n        _tokenAddress.burn(msg.sender, _amount);\n        emit Burn(msg.sender, _amount);\n    }\n\n     function burnedOnOppositeChain(address userAccount, uint256 _amount) public onlyOwner {\n        pendingBalance[userAccount] += _amount;\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Bridge.sol": {
				"Bridge": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "burner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IBUSDT",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAccount",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burnedOnOppositeChain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IBUSDT",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "pendingBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Bridge.sol\":319:1216  contract Bridge is Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"src/Bridge.sol\":522:622  constructor(address _tokenAddress) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/Bridge.sol\":565:575  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"src/Bridge.sol\":602:615  _tokenAddress */\n  dup1\n    /* \"src/Bridge.sol\":587:599  tokenAddress */\n  0x02\n  0x00\n    /* \"src/Bridge.sol\":587:615  tokenAddress = _tokenAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/Bridge.sol\":522:622  constructor(address _tokenAddress) Ownable(msg.sender) {... */\n  pop\n    /* \"src/Bridge.sol\":319:1216  contract Bridge is Ownable{... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_22:\n    /* \"#utility.yul\":1289:1313   */\n  tag_40\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_42\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/Bridge.sol\":319:1216  contract Bridge is Ownable{... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/Bridge.sol\":319:1216  contract Bridge is Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x3736f85d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6cb08859\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/Bridge.sol\":466:515  mapping(address => uint256) public pendingBalance */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Bridge.sol\":629:848  function mint(IBUSDT _tokenAddress, uint256 _amount) public {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"src/Bridge.sol\":1073:1214  function burnedOnOppositeChain(address userAccount, uint256 _amount) public onlyOwner {... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Bridge.sol\":378:405  address public tokenAddress */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Bridge.sol\":853:1066  function burn(IBUSDT _tokenAddress, uint256 _amount) public {... */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"src/Bridge.sol\":350:372  uint256 public balance */\n    tag_10:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"src/Bridge.sol\":466:515  mapping(address => uint256) public pendingBalance */\n    tag_16:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/Bridge.sol\":629:848  function mint(IBUSDT _tokenAddress, uint256 _amount) public {... */\n    tag_22:\n        /* \"src/Bridge.sol\":737:744  _amount */\n      dup1\n        /* \"src/Bridge.sol\":707:721  pendingBalance */\n      0x03\n        /* \"src/Bridge.sol\":707:733  pendingBalance[msg.sender] */\n      0x00\n        /* \"src/Bridge.sol\":722:732  msg.sender */\n      caller\n        /* \"src/Bridge.sol\":707:733  pendingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/Bridge.sol\":707:744  pendingBalance[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"src/Bridge.sol\":699:745  require(pendingBalance[msg.sender] >= _amount) */\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n        /* \"src/Bridge.sol\":785:792  _amount */\n      dup1\n        /* \"src/Bridge.sol\":755:769  pendingBalance */\n      0x03\n        /* \"src/Bridge.sol\":755:781  pendingBalance[msg.sender] */\n      0x00\n        /* \"src/Bridge.sol\":770:780  msg.sender */\n      caller\n        /* \"src/Bridge.sol\":755:781  pendingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/Bridge.sol\":755:792  pendingBalance[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Bridge.sol\":802:815  _tokenAddress */\n      dup2\n        /* \"src/Bridge.sol\":802:820  _tokenAddress.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"src/Bridge.sol\":821:831  msg.sender */\n      caller\n        /* \"src/Bridge.sol\":833:840  _amount */\n      dup4\n        /* \"src/Bridge.sol\":802:841  _tokenAddress.mint(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap3\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Bridge.sol\":629:848  function mint(IBUSDT _tokenAddress, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Bridge.sol\":1073:1214  function burnedOnOppositeChain(address userAccount, uint256 _amount) public onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_55:\n        /* \"src/Bridge.sol\":1200:1207  _amount */\n      dup1\n        /* \"src/Bridge.sol\":1169:1183  pendingBalance */\n      0x03\n        /* \"src/Bridge.sol\":1169:1196  pendingBalance[userAccount] */\n      0x00\n        /* \"src/Bridge.sol\":1184:1195  userAccount */\n      dup5\n        /* \"src/Bridge.sol\":1169:1196  pendingBalance[userAccount] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/Bridge.sol\":1169:1207  pendingBalance[userAccount] += _amount */\n      dup3\n      dup3\n      sload\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Bridge.sol\":1073:1214  function burnedOnOppositeChain(address userAccount, uint256 _amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/Bridge.sol\":378:405  address public tokenAddress */\n    tag_34:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/Bridge.sol\":853:1066  function burn(IBUSDT _tokenAddress, uint256 _amount) public {... */\n    tag_38:\n        /* \"src/Bridge.sol\":957:969  tokenAddress */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Bridge.sol\":931:969  address(_tokenAddress) == tokenAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Bridge.sol\":939:952  _tokenAddress */\n      dup3\n        /* \"src/Bridge.sol\":931:969  address(_tokenAddress) == tokenAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/Bridge.sol\":923:970  require(address(_tokenAddress) == tokenAddress) */\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n        /* \"src/Bridge.sol\":980:993  _tokenAddress */\n      dup2\n        /* \"src/Bridge.sol\":980:998  _tokenAddress.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9dc29fac\n        /* \"src/Bridge.sol\":999:1009  msg.sender */\n      caller\n        /* \"src/Bridge.sol\":1011:1018  _amount */\n      dup4\n        /* \"src/Bridge.sol\":980:1019  _tokenAddress.burn(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap3\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_68:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Bridge.sol\":1039:1049  msg.sender */\n      caller\n        /* \"src/Bridge.sol\":1034:1059  Burn(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5\n        /* \"src/Bridge.sol\":1051:1058  _amount */\n      dup3\n        /* \"src/Bridge.sol\":1034:1059  Burn(msg.sender, _amount) */\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/Bridge.sol\":853:1066  function burn(IBUSDT _tokenAddress, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Bridge.sol\":350:372  uint256 public balance */\n    tag_40:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_76\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_30\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_83\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_89:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_91:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_92:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_110\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_91\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_93:\n        /* \"#utility.yul\":641:665   */\n      tag_112\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_92\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_113:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_94:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_115\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_93\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_15:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_118\n      tag_89\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":917:1036   */\n    tag_117:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_119\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_94\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_95:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_96:\n        /* \"#utility.yul\":1346:1370   */\n      tag_122\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_95\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_18:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_124\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_96\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1721   */\n    tag_97:\n        /* \"#utility.yul\":1662:1669   */\n      0x00\n        /* \"#utility.yul\":1691:1715   */\n      tag_126\n        /* \"#utility.yul\":1709:1714   */\n      dup3\n        /* \"#utility.yul\":1691:1715   */\n      tag_92\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1680:1715   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1727:1877   */\n    tag_98:\n        /* \"#utility.yul\":1814:1852   */\n      tag_128\n        /* \"#utility.yul\":1846:1851   */\n      dup2\n        /* \"#utility.yul\":1814:1852   */\n      tag_97\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1807:1812   */\n      dup2\n        /* \"#utility.yul\":1804:1853   */\n      eq\n        /* \"#utility.yul\":1794:1871   */\n      tag_129\n      jumpi\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      dup1\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":1794:1871   */\n    tag_129:\n        /* \"#utility.yul\":1727:1877   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1883:2050   */\n    tag_99:\n        /* \"#utility.yul\":1943:1948   */\n      0x00\n        /* \"#utility.yul\":1981:1987   */\n      dup2\n        /* \"#utility.yul\":1968:1988   */\n      calldataload\n        /* \"#utility.yul\":1959:1988   */\n      swap1\n      pop\n        /* \"#utility.yul\":1997:2044   */\n      tag_131\n        /* \"#utility.yul\":2038:2043   */\n      dup2\n        /* \"#utility.yul\":1997:2044   */\n      tag_98\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1883:2050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2056:2178   */\n    tag_100:\n        /* \"#utility.yul\":2129:2153   */\n      tag_133\n        /* \"#utility.yul\":2147:2152   */\n      dup2\n        /* \"#utility.yul\":2129:2153   */\n      tag_95\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2122:2127   */\n      dup2\n        /* \"#utility.yul\":2119:2154   */\n      eq\n        /* \"#utility.yul\":2109:2172   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":2168:2169   */\n      0x00\n        /* \"#utility.yul\":2165:2166   */\n      dup1\n        /* \"#utility.yul\":2158:2170   */\n      revert\n        /* \"#utility.yul\":2109:2172   */\n    tag_134:\n        /* \"#utility.yul\":2056:2178   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2323   */\n    tag_101:\n        /* \"#utility.yul\":2230:2235   */\n      0x00\n        /* \"#utility.yul\":2268:2274   */\n      dup2\n        /* \"#utility.yul\":2255:2275   */\n      calldataload\n        /* \"#utility.yul\":2246:2275   */\n      swap1\n      pop\n        /* \"#utility.yul\":2284:2317   */\n      tag_136\n        /* \"#utility.yul\":2311:2316   */\n      dup2\n        /* \"#utility.yul\":2284:2317   */\n      tag_100\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2184:2323   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2329:2831   */\n    tag_21:\n        /* \"#utility.yul\":2411:2417   */\n      0x00\n        /* \"#utility.yul\":2419:2425   */\n      dup1\n        /* \"#utility.yul\":2468:2470   */\n      0x40\n        /* \"#utility.yul\":2456:2465   */\n      dup4\n        /* \"#utility.yul\":2447:2454   */\n      dup6\n        /* \"#utility.yul\":2443:2466   */\n      sub\n        /* \"#utility.yul\":2439:2471   */\n      slt\n        /* \"#utility.yul\":2436:2555   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":2474:2553   */\n      tag_139\n      tag_89\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2436:2555   */\n    tag_138:\n        /* \"#utility.yul\":2594:2595   */\n      0x00\n        /* \"#utility.yul\":2619:2686   */\n      tag_140\n        /* \"#utility.yul\":2678:2685   */\n      dup6\n        /* \"#utility.yul\":2669:2675   */\n      dup3\n        /* \"#utility.yul\":2658:2667   */\n      dup7\n        /* \"#utility.yul\":2654:2676   */\n      add\n        /* \"#utility.yul\":2619:2686   */\n      tag_99\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2609:2686   */\n      swap3\n      pop\n        /* \"#utility.yul\":2565:2696   */\n      pop\n        /* \"#utility.yul\":2735:2737   */\n      0x20\n        /* \"#utility.yul\":2761:2814   */\n      tag_141\n        /* \"#utility.yul\":2806:2813   */\n      dup6\n        /* \"#utility.yul\":2797:2803   */\n      dup3\n        /* \"#utility.yul\":2786:2795   */\n      dup7\n        /* \"#utility.yul\":2782:2804   */\n      add\n        /* \"#utility.yul\":2761:2814   */\n      tag_101\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2751:2814   */\n      swap2\n      pop\n        /* \"#utility.yul\":2706:2824   */\n      pop\n        /* \"#utility.yul\":2329:2831   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2837:3311   */\n    tag_25:\n        /* \"#utility.yul\":2905:2911   */\n      0x00\n        /* \"#utility.yul\":2913:2919   */\n      dup1\n        /* \"#utility.yul\":2962:2964   */\n      0x40\n        /* \"#utility.yul\":2950:2959   */\n      dup4\n        /* \"#utility.yul\":2941:2948   */\n      dup6\n        /* \"#utility.yul\":2937:2960   */\n      sub\n        /* \"#utility.yul\":2933:2965   */\n      slt\n        /* \"#utility.yul\":2930:3049   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":2968:3047   */\n      tag_144\n      tag_89\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2930:3049   */\n    tag_143:\n        /* \"#utility.yul\":3088:3089   */\n      0x00\n        /* \"#utility.yul\":3113:3166   */\n      tag_145\n        /* \"#utility.yul\":3158:3165   */\n      dup6\n        /* \"#utility.yul\":3149:3155   */\n      dup3\n        /* \"#utility.yul\":3138:3147   */\n      dup7\n        /* \"#utility.yul\":3134:3156   */\n      add\n        /* \"#utility.yul\":3113:3166   */\n      tag_94\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3103:3166   */\n      swap3\n      pop\n        /* \"#utility.yul\":3059:3176   */\n      pop\n        /* \"#utility.yul\":3215:3217   */\n      0x20\n        /* \"#utility.yul\":3241:3294   */\n      tag_146\n        /* \"#utility.yul\":3286:3293   */\n      dup6\n        /* \"#utility.yul\":3277:3283   */\n      dup3\n        /* \"#utility.yul\":3266:3275   */\n      dup7\n        /* \"#utility.yul\":3262:3284   */\n      add\n        /* \"#utility.yul\":3241:3294   */\n      tag_101\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3231:3294   */\n      swap2\n      pop\n        /* \"#utility.yul\":3186:3304   */\n      pop\n        /* \"#utility.yul\":2837:3311   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3317:3435   */\n    tag_102:\n        /* \"#utility.yul\":3404:3428   */\n      tag_148\n        /* \"#utility.yul\":3422:3427   */\n      dup2\n        /* \"#utility.yul\":3404:3428   */\n      tag_92\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3399:3402   */\n      dup3\n        /* \"#utility.yul\":3392:3429   */\n      mstore\n        /* \"#utility.yul\":3317:3435   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3441:3663   */\n    tag_32:\n        /* \"#utility.yul\":3534:3538   */\n      0x00\n        /* \"#utility.yul\":3572:3574   */\n      0x20\n        /* \"#utility.yul\":3561:3570   */\n      dup3\n        /* \"#utility.yul\":3557:3575   */\n      add\n        /* \"#utility.yul\":3549:3575   */\n      swap1\n      pop\n        /* \"#utility.yul\":3585:3656   */\n      tag_150\n        /* \"#utility.yul\":3653:3654   */\n      0x00\n        /* \"#utility.yul\":3642:3651   */\n      dup4\n        /* \"#utility.yul\":3638:3655   */\n      add\n        /* \"#utility.yul\":3629:3635   */\n      dup5\n        /* \"#utility.yul\":3585:3656   */\n      tag_102\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":3441:3663   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3669:3849   */\n    tag_103:\n        /* \"#utility.yul\":3717:3794   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3714:3715   */\n      0x00\n        /* \"#utility.yul\":3707:3795   */\n      mstore\n        /* \"#utility.yul\":3814:3818   */\n      0x11\n        /* \"#utility.yul\":3811:3812   */\n      0x04\n        /* \"#utility.yul\":3804:3819   */\n      mstore\n        /* \"#utility.yul\":3838:3842   */\n      0x24\n        /* \"#utility.yul\":3835:3836   */\n      0x00\n        /* \"#utility.yul\":3828:3843   */\n      revert\n        /* \"#utility.yul\":3855:4049   */\n    tag_48:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3915:3935   */\n      tag_153\n        /* \"#utility.yul\":3933:3934   */\n      dup3\n        /* \"#utility.yul\":3915:3935   */\n      tag_95\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3910:3935   */\n      swap2\n      pop\n        /* \"#utility.yul\":3949:3969   */\n      tag_154\n        /* \"#utility.yul\":3967:3968   */\n      dup4\n        /* \"#utility.yul\":3949:3969   */\n      tag_95\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3944:3969   */\n      swap3\n      pop\n        /* \"#utility.yul\":3993:3994   */\n      dup3\n        /* \"#utility.yul\":3990:3991   */\n      dup3\n        /* \"#utility.yul\":3986:3995   */\n      sub\n        /* \"#utility.yul\":3978:3995   */\n      swap1\n      pop\n        /* \"#utility.yul\":4017:4018   */\n      dup2\n        /* \"#utility.yul\":4011:4015   */\n      dup2\n        /* \"#utility.yul\":4008:4019   */\n      gt\n        /* \"#utility.yul\":4005:4042   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":4022:4040   */\n      tag_156\n      tag_103\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4005:4042   */\n    tag_155:\n        /* \"#utility.yul\":3855:4049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4055:4387   */\n    tag_50:\n        /* \"#utility.yul\":4176:4180   */\n      0x00\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4203:4212   */\n      dup3\n        /* \"#utility.yul\":4199:4217   */\n      add\n        /* \"#utility.yul\":4191:4217   */\n      swap1\n      pop\n        /* \"#utility.yul\":4227:4298   */\n      tag_158\n        /* \"#utility.yul\":4295:4296   */\n      0x00\n        /* \"#utility.yul\":4284:4293   */\n      dup4\n        /* \"#utility.yul\":4280:4297   */\n      add\n        /* \"#utility.yul\":4271:4277   */\n      dup6\n        /* \"#utility.yul\":4227:4298   */\n      tag_102\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4308:4380   */\n      tag_159\n        /* \"#utility.yul\":4376:4378   */\n      0x20\n        /* \"#utility.yul\":4365:4374   */\n      dup4\n        /* \"#utility.yul\":4361:4379   */\n      add\n        /* \"#utility.yul\":4352:4358   */\n      dup5\n        /* \"#utility.yul\":4308:4380   */\n      tag_96\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4055:4387   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4393:4584   */\n    tag_59:\n        /* \"#utility.yul\":4433:4436   */\n      0x00\n        /* \"#utility.yul\":4452:4472   */\n      tag_161\n        /* \"#utility.yul\":4470:4471   */\n      dup3\n        /* \"#utility.yul\":4452:4472   */\n      tag_95\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":4447:4472   */\n      swap2\n      pop\n        /* \"#utility.yul\":4486:4506   */\n      tag_162\n        /* \"#utility.yul\":4504:4505   */\n      dup4\n        /* \"#utility.yul\":4486:4506   */\n      tag_95\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4481:4506   */\n      swap3\n      pop\n        /* \"#utility.yul\":4529:4530   */\n      dup3\n        /* \"#utility.yul\":4526:4527   */\n      dup3\n        /* \"#utility.yul\":4522:4531   */\n      add\n        /* \"#utility.yul\":4515:4531   */\n      swap1\n      pop\n        /* \"#utility.yul\":4550:4553   */\n      dup1\n        /* \"#utility.yul\":4547:4548   */\n      dup3\n        /* \"#utility.yul\":4544:4554   */\n      gt\n        /* \"#utility.yul\":4541:4577   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":4557:4575   */\n      tag_164\n      tag_103\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4541:4577   */\n    tag_163:\n        /* \"#utility.yul\":4393:4584   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200712f6f2a8bc390f1020726a5d1b0079c3eb590caf8a963c611bf8e95a42d9f964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_306": {
									"entryPoint": null,
									"id": 306,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 248,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:4",
										"nodeType": "YulBlock",
										"src": "0:1551:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "922:274:4",
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:4",
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nativeSrc": "970:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nativeSrc": "970:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nativeSrc": "939:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:4",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nativeSrc": "935:32:4",
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nativeSrc": "932:119:4",
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nativeSrc": "1061:128:4",
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nativeSrc": "1076:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nativeSrc": "1147:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nativeSrc": "1115:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:4",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:4",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:4",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											},
											{
												"body": {
													"nativeSrc": "1267:53:4",
													"nodeType": "YulBlock",
													"src": "1267:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:4"
																		},
																		"nativeSrc": "1289:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:4"
																},
																"nativeSrc": "1277:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:4"
															},
															"nativeSrc": "1277:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:4",
														"nodeType": "YulTypedName",
														"src": "1255:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:4",
														"nodeType": "YulTypedName",
														"src": "1262:3:4",
														"type": ""
													}
												],
												"src": "1202:118:4"
											},
											{
												"body": {
													"nativeSrc": "1424:124:4",
													"nodeType": "YulBlock",
													"src": "1424:124:4",
													"statements": [
														{
															"nativeSrc": "1434:26:4",
															"nodeType": "YulAssignment",
															"src": "1434:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:4"
																},
																"nativeSrc": "1442:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:4"
																		},
																		"nativeSrc": "1523:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:4"
																},
																"nativeSrc": "1470:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:4"
															},
															"nativeSrc": "1470:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:4",
														"nodeType": "YulTypedName",
														"src": "1396:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:4",
														"nodeType": "YulTypedName",
														"src": "1408:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:4",
														"nodeType": "YulTypedName",
														"src": "1419:4:4",
														"type": ""
													}
												],
												"src": "1326:222:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610b89380380610b8983398181016040528101906100319190610217565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610251565b60405180910390fd5b6100b1816100f860201b60201c565b508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061026a565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e6826101bd565b9050919050565b6101f6816101dc565b8114610200575f80fd5b50565b5f81519050610211816101ed565b92915050565b5f6020828403121561022c5761022b6101b9565b5b5f61023984828501610203565b91505092915050565b61024b816101dc565b82525050565b5f6020820190506102645f830184610242565b92915050565b610912806102775f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c80638da5cb5b116100645780638da5cb5b146101075780639d76ea58146101255780639dc29fac14610143578063b69ef8a81461015f578063f2fde38b1461017d57610091565b80633736f85d1461009557806340c10f19146100c55780636cb08859146100e1578063715018a6146100fd575b5f80fd5b6100af60048036038101906100aa91906106bd565b610199565b6040516100bc9190610700565b60405180910390f35b6100df60048036038101906100da919061077e565b6101ae565b005b6100fb60048036038101906100f691906107bc565b6102b6565b005b610105610315565b005b61010f610328565b60405161011c9190610809565b60405180910390f35b61012d61034f565b60405161013a9190610809565b60405180910390f35b61015d6004803603810190610158919061077e565b610374565b005b610167610486565b6040516101749190610700565b60405180910390f35b610197600480360381019061019291906106bd565b61048c565b005b6003602052805f5260405f205f915090505481565b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156101f7575f80fd5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610243919061084f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401610285929190610882565b5f604051808303815f87803b15801561029c575f80fd5b505af11580156102ae573d5f803e3d5ffd5b505050505050565b6102be610510565b8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461030a91906108a9565b925050819055505050565b61031d610510565b6103265f610597565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146103cc575f80fd5b8173ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b8152600401610407929190610882565b5f604051808303815f87803b15801561041e575f80fd5b505af1158015610430573d5f803e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58260405161047a9190610700565b60405180910390a25050565b60015481565b610494610510565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610504575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104fb9190610809565b60405180910390fd5b61050d81610597565b50565b610518610658565b73ffffffffffffffffffffffffffffffffffffffff16610536610328565b73ffffffffffffffffffffffffffffffffffffffff161461059557610559610658565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161058c9190610809565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61068c82610663565b9050919050565b61069c81610682565b81146106a6575f80fd5b50565b5f813590506106b781610693565b92915050565b5f602082840312156106d2576106d161065f565b5b5f6106df848285016106a9565b91505092915050565b5f819050919050565b6106fa816106e8565b82525050565b5f6020820190506107135f8301846106f1565b92915050565b5f61072382610682565b9050919050565b61073381610719565b811461073d575f80fd5b50565b5f8135905061074e8161072a565b92915050565b61075d816106e8565b8114610767575f80fd5b50565b5f8135905061077881610754565b92915050565b5f80604083850312156107945761079361065f565b5b5f6107a185828601610740565b92505060206107b28582860161076a565b9150509250929050565b5f80604083850312156107d2576107d161065f565b5b5f6107df858286016106a9565b92505060206107f08582860161076a565b9150509250929050565b61080381610682565b82525050565b5f60208201905061081c5f8301846107fa565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610859826106e8565b9150610864836106e8565b925082820390508181111561087c5761087b610822565b5b92915050565b5f6040820190506108955f8301856107fa565b6108a260208301846106f1565b9392505050565b5f6108b3826106e8565b91506108be836106e8565b92508282019050808211156108d6576108d5610822565b5b9291505056fea26469706673582212200712f6f2a8bc390f1020726a5d1b0079c3eb590caf8a963c611bf8e95a42d9f964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB89 CODESIZE SUB DUP1 PUSH2 0xB89 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x217 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0xF8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x26A JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6 DUP3 PUSH2 0x1BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6 DUP2 PUSH2 0x1DC JUMP JUMPDEST DUP2 EQ PUSH2 0x200 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x211 DUP2 PUSH2 0x1ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C JUMPI PUSH2 0x22B PUSH2 0x1B9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239 DUP5 DUP3 DUP6 ADD PUSH2 0x203 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x1DC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x264 PUSH0 DUP4 ADD DUP5 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x912 DUP1 PUSH2 0x277 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x17D JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x3736F85D EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x6CB08859 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x105 PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10F PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x374 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x167 PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP3 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x510 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x31D PUSH2 0x510 JUMP JUMPDEST PUSH2 0x326 PUSH0 PUSH2 0x597 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x407 SWAP3 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x430 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x494 PUSH2 0x510 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x504 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50D DUP2 PUSH2 0x597 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x518 PUSH2 0x658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x536 PUSH2 0x328 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x595 JUMPI PUSH2 0x559 PUSH2 0x658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x68C DUP3 PUSH2 0x663 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x69C DUP2 PUSH2 0x682 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B7 DUP2 PUSH2 0x693 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D2 JUMPI PUSH2 0x6D1 PUSH2 0x65F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6DF DUP5 DUP3 DUP6 ADD PUSH2 0x6A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FA DUP2 PUSH2 0x6E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x713 PUSH0 DUP4 ADD DUP5 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x723 DUP3 PUSH2 0x682 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x733 DUP2 PUSH2 0x719 JUMP JUMPDEST DUP2 EQ PUSH2 0x73D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x74E DUP2 PUSH2 0x72A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x75D DUP2 PUSH2 0x6E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x767 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x778 DUP2 PUSH2 0x754 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x794 JUMPI PUSH2 0x793 PUSH2 0x65F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7A1 DUP6 DUP3 DUP7 ADD PUSH2 0x740 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7B2 DUP6 DUP3 DUP7 ADD PUSH2 0x76A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D2 JUMPI PUSH2 0x7D1 PUSH2 0x65F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7DF DUP6 DUP3 DUP7 ADD PUSH2 0x6A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7F0 DUP6 DUP3 DUP7 ADD PUSH2 0x76A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x803 DUP2 PUSH2 0x682 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x81C PUSH0 DUP4 ADD DUP5 PUSH2 0x7FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x859 DUP3 PUSH2 0x6E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x864 DUP4 PUSH2 0x6E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x87C JUMPI PUSH2 0x87B PUSH2 0x822 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x895 PUSH0 DUP4 ADD DUP6 PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x8A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8B3 DUP3 PUSH2 0x6E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x8BE DUP4 PUSH2 0x6E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8D6 JUMPI PUSH2 0x8D5 PUSH2 0x822 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SLT 0xF6 CALLCODE 0xA8 0xBC CODECOPY 0xF LT KECCAK256 PUSH19 0x6A5D1B0079C3EB590CAF8A963C611BF8E95A42 0xD9 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "319:897:3:-:0;;;522:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;565:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;602:13:3::1;587:12;;:28;;;;;;;;;;;;;;;;;;522:100:::0;319:897;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;319:897:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1296,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": 1624,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1431,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balance_280": {
									"entryPoint": 1158,
									"id": 280,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_371": {
									"entryPoint": 884,
									"id": 371,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burnedOnOppositeChain_387": {
									"entryPoint": 694,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_339": {
									"entryPoint": 430,
									"id": 339,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 808,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingBalance_292": {
									"entryPoint": 409,
									"id": 292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 789,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAddress_282": {
									"entryPoint": 847,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1164,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IBUSDT_$276": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IBUSDT_$276t_uint256": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2178,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IBUSDT_$276": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1631,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IBUSDT_$276": {
									"entryPoint": 1834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4587:4",
										"nodeType": "YulBlock",
										"src": "0:4587:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "748:87:4",
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nativeSrc": "758:29:4",
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nativeSrc": "767:20:4",
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nativeSrc": "796:33:4",
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nativeSrc": "796:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:4",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:4",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:4",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nativeSrc": "907:263:4",
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:4",
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nativeSrc": "955:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nativeSrc": "955:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nativeSrc": "924:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:4",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nativeSrc": "920:32:4",
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nativeSrc": "917:119:4",
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nativeSrc": "1046:117:4",
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nativeSrc": "1061:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nativeSrc": "1121:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nativeSrc": "1100:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:4",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:4",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:4",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nativeSrc": "1221:32:4",
													"nodeType": "YulBlock",
													"src": "1221:32:4",
													"statements": [
														{
															"nativeSrc": "1231:16:4",
															"nodeType": "YulAssignment",
															"src": "1231:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:4",
																"nodeType": "YulIdentifier",
																"src": "1242:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:4",
														"nodeType": "YulTypedName",
														"src": "1203:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:4",
														"nodeType": "YulTypedName",
														"src": "1213:7:4",
														"type": ""
													}
												],
												"src": "1176:77:4"
											},
											{
												"body": {
													"nativeSrc": "1324:53:4",
													"nodeType": "YulBlock",
													"src": "1324:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:4"
																		},
																		"nativeSrc": "1346:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:4"
																},
																"nativeSrc": "1334:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:4"
															},
															"nativeSrc": "1334:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:4",
														"nodeType": "YulTypedName",
														"src": "1312:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:4",
														"nodeType": "YulTypedName",
														"src": "1319:3:4",
														"type": ""
													}
												],
												"src": "1259:118:4"
											},
											{
												"body": {
													"nativeSrc": "1481:124:4",
													"nodeType": "YulBlock",
													"src": "1481:124:4",
													"statements": [
														{
															"nativeSrc": "1491:26:4",
															"nodeType": "YulAssignment",
															"src": "1491:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:4"
																},
																"nativeSrc": "1499:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:4"
																		},
																		"nativeSrc": "1580:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:4"
																},
																"nativeSrc": "1527:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:4"
															},
															"nativeSrc": "1527:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:4",
														"nodeType": "YulTypedName",
														"src": "1453:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:4",
														"nodeType": "YulTypedName",
														"src": "1465:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:4",
														"nodeType": "YulTypedName",
														"src": "1476:4:4",
														"type": ""
													}
												],
												"src": "1383:222:4"
											},
											{
												"body": {
													"nativeSrc": "1670:51:4",
													"nodeType": "YulBlock",
													"src": "1670:51:4",
													"statements": [
														{
															"nativeSrc": "1680:35:4",
															"nodeType": "YulAssignment",
															"src": "1680:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1709:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1709:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1691:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1691:17:4"
																},
																"nativeSrc": "1691:24:4",
																"nodeType": "YulFunctionCall",
																"src": "1691:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1680:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1680:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IBUSDT_$276",
												"nativeSrc": "1611:110:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1652:5:4",
														"nodeType": "YulTypedName",
														"src": "1652:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1662:7:4",
														"nodeType": "YulTypedName",
														"src": "1662:7:4",
														"type": ""
													}
												],
												"src": "1611:110:4"
											},
											{
												"body": {
													"nativeSrc": "1784:93:4",
													"nodeType": "YulBlock",
													"src": "1784:93:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1855:16:4",
																"nodeType": "YulBlock",
																"src": "1855:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1867:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1867:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1857:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:4"
																			},
																			"nativeSrc": "1857:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1857:12:4"
																		},
																		"nativeSrc": "1857:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1857:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1807:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1807:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1846:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1846:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IBUSDT_$276",
																					"nativeSrc": "1814:31:4",
																					"nodeType": "YulIdentifier",
																					"src": "1814:31:4"
																				},
																				"nativeSrc": "1814:38:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1814:38:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1804:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1804:2:4"
																		},
																		"nativeSrc": "1804:49:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1804:49:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1797:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1797:6:4"
																},
																"nativeSrc": "1797:57:4",
																"nodeType": "YulFunctionCall",
																"src": "1797:57:4"
															},
															"nativeSrc": "1794:77:4",
															"nodeType": "YulIf",
															"src": "1794:77:4"
														}
													]
												},
												"name": "validator_revert_t_contract$_IBUSDT_$276",
												"nativeSrc": "1727:150:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1777:5:4",
														"nodeType": "YulTypedName",
														"src": "1777:5:4",
														"type": ""
													}
												],
												"src": "1727:150:4"
											},
											{
												"body": {
													"nativeSrc": "1949:101:4",
													"nodeType": "YulBlock",
													"src": "1949:101:4",
													"statements": [
														{
															"nativeSrc": "1959:29:4",
															"nodeType": "YulAssignment",
															"src": "1959:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1981:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1981:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1968:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1968:12:4"
																},
																"nativeSrc": "1968:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1968:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1959:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1959:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2038:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2038:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IBUSDT_$276",
																	"nativeSrc": "1997:40:4",
																	"nodeType": "YulIdentifier",
																	"src": "1997:40:4"
																},
																"nativeSrc": "1997:47:4",
																"nodeType": "YulFunctionCall",
																"src": "1997:47:4"
															},
															"nativeSrc": "1997:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "1997:47:4"
														}
													]
												},
												"name": "abi_decode_t_contract$_IBUSDT_$276",
												"nativeSrc": "1883:167:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1927:6:4",
														"nodeType": "YulTypedName",
														"src": "1927:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1935:3:4",
														"nodeType": "YulTypedName",
														"src": "1935:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1943:5:4",
														"nodeType": "YulTypedName",
														"src": "1943:5:4",
														"type": ""
													}
												],
												"src": "1883:167:4"
											},
											{
												"body": {
													"nativeSrc": "2099:79:4",
													"nodeType": "YulBlock",
													"src": "2099:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2156:16:4",
																"nodeType": "YulBlock",
																"src": "2156:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2165:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2165:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2168:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2168:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2158:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:4"
																			},
																			"nativeSrc": "2158:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2158:12:4"
																		},
																		"nativeSrc": "2158:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2158:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2122:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2122:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2147:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2147:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2129:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "2129:17:4"
																				},
																				"nativeSrc": "2129:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2129:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2119:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2119:2:4"
																		},
																		"nativeSrc": "2119:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2119:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2112:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:4"
																},
																"nativeSrc": "2112:43:4",
																"nodeType": "YulFunctionCall",
																"src": "2112:43:4"
															},
															"nativeSrc": "2109:63:4",
															"nodeType": "YulIf",
															"src": "2109:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2056:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2092:5:4",
														"nodeType": "YulTypedName",
														"src": "2092:5:4",
														"type": ""
													}
												],
												"src": "2056:122:4"
											},
											{
												"body": {
													"nativeSrc": "2236:87:4",
													"nodeType": "YulBlock",
													"src": "2236:87:4",
													"statements": [
														{
															"nativeSrc": "2246:29:4",
															"nodeType": "YulAssignment",
															"src": "2246:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2268:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2268:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2255:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2255:12:4"
																},
																"nativeSrc": "2255:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2255:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2246:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2246:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2311:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2311:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2284:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "2284:26:4"
																},
																"nativeSrc": "2284:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2284:33:4"
															},
															"nativeSrc": "2284:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2284:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2184:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2214:6:4",
														"nodeType": "YulTypedName",
														"src": "2214:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2222:3:4",
														"nodeType": "YulTypedName",
														"src": "2222:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2230:5:4",
														"nodeType": "YulTypedName",
														"src": "2230:5:4",
														"type": ""
													}
												],
												"src": "2184:139:4"
											},
											{
												"body": {
													"nativeSrc": "2426:405:4",
													"nodeType": "YulBlock",
													"src": "2426:405:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2472:83:4",
																"nodeType": "YulBlock",
																"src": "2472:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2474:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2474:77:4"
																			},
																			"nativeSrc": "2474:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2474:79:4"
																		},
																		"nativeSrc": "2474:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2474:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2447:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2447:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2456:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2456:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2443:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2443:3:4"
																		},
																		"nativeSrc": "2443:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2443:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2468:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2468:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2439:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2439:3:4"
																},
																"nativeSrc": "2439:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2439:32:4"
															},
															"nativeSrc": "2436:119:4",
															"nodeType": "YulIf",
															"src": "2436:119:4"
														},
														{
															"nativeSrc": "2565:131:4",
															"nodeType": "YulBlock",
															"src": "2565:131:4",
															"statements": [
																{
																	"nativeSrc": "2580:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2580:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2594:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2594:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2584:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2584:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2609:77:4",
																	"nodeType": "YulAssignment",
																	"src": "2609:77:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2658:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2658:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2669:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2669:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2654:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2654:3:4"
																				},
																				"nativeSrc": "2654:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2654:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2678:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2678:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IBUSDT_$276",
																			"nativeSrc": "2619:34:4",
																			"nodeType": "YulIdentifier",
																			"src": "2619:34:4"
																		},
																		"nativeSrc": "2619:67:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2619:67:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2609:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2609:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2706:118:4",
															"nodeType": "YulBlock",
															"src": "2706:118:4",
															"statements": [
																{
																	"nativeSrc": "2721:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2721:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2735:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2735:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2725:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2725:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2751:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2751:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2786:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2786:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2797:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2797:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2782:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2782:3:4"
																				},
																				"nativeSrc": "2782:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2782:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2806:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2806:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2761:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2761:20:4"
																		},
																		"nativeSrc": "2761:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2761:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2751:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2751:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IBUSDT_$276t_uint256",
												"nativeSrc": "2329:502:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2388:9:4",
														"nodeType": "YulTypedName",
														"src": "2388:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2399:7:4",
														"nodeType": "YulTypedName",
														"src": "2399:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2411:6:4",
														"nodeType": "YulTypedName",
														"src": "2411:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2419:6:4",
														"nodeType": "YulTypedName",
														"src": "2419:6:4",
														"type": ""
													}
												],
												"src": "2329:502:4"
											},
											{
												"body": {
													"nativeSrc": "2920:391:4",
													"nodeType": "YulBlock",
													"src": "2920:391:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2966:83:4",
																"nodeType": "YulBlock",
																"src": "2966:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2968:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2968:77:4"
																			},
																			"nativeSrc": "2968:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2968:79:4"
																		},
																		"nativeSrc": "2968:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2968:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2941:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2941:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2950:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2950:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2937:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2937:3:4"
																		},
																		"nativeSrc": "2937:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2937:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2962:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2962:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2933:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2933:3:4"
																},
																"nativeSrc": "2933:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2933:32:4"
															},
															"nativeSrc": "2930:119:4",
															"nodeType": "YulIf",
															"src": "2930:119:4"
														},
														{
															"nativeSrc": "3059:117:4",
															"nodeType": "YulBlock",
															"src": "3059:117:4",
															"statements": [
																{
																	"nativeSrc": "3074:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3074:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3088:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3088:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3078:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3078:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3103:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3103:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3138:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3138:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3149:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3149:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3134:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3134:3:4"
																				},
																				"nativeSrc": "3134:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3134:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3158:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3158:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3113:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3113:20:4"
																		},
																		"nativeSrc": "3113:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3113:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3103:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3103:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3186:118:4",
															"nodeType": "YulBlock",
															"src": "3186:118:4",
															"statements": [
																{
																	"nativeSrc": "3201:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3201:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3215:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3215:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3205:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3205:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3231:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3231:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3266:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3266:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3277:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3277:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3262:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3262:3:4"
																				},
																				"nativeSrc": "3262:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3262:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3286:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3286:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3241:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3241:20:4"
																		},
																		"nativeSrc": "3241:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3241:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3231:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3231:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2837:474:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2882:9:4",
														"nodeType": "YulTypedName",
														"src": "2882:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2893:7:4",
														"nodeType": "YulTypedName",
														"src": "2893:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2905:6:4",
														"nodeType": "YulTypedName",
														"src": "2905:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2913:6:4",
														"nodeType": "YulTypedName",
														"src": "2913:6:4",
														"type": ""
													}
												],
												"src": "2837:474:4"
											},
											{
												"body": {
													"nativeSrc": "3382:53:4",
													"nodeType": "YulBlock",
													"src": "3382:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3399:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3399:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3422:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3422:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3404:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "3404:17:4"
																		},
																		"nativeSrc": "3404:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3404:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3392:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3392:6:4"
																},
																"nativeSrc": "3392:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3392:37:4"
															},
															"nativeSrc": "3392:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "3392:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3317:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3370:5:4",
														"nodeType": "YulTypedName",
														"src": "3370:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3377:3:4",
														"nodeType": "YulTypedName",
														"src": "3377:3:4",
														"type": ""
													}
												],
												"src": "3317:118:4"
											},
											{
												"body": {
													"nativeSrc": "3539:124:4",
													"nodeType": "YulBlock",
													"src": "3539:124:4",
													"statements": [
														{
															"nativeSrc": "3549:26:4",
															"nodeType": "YulAssignment",
															"src": "3549:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3561:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3561:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3572:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3572:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3557:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3557:3:4"
																},
																"nativeSrc": "3557:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3557:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3549:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3549:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3629:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3629:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3642:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3642:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3653:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3653:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3638:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3638:3:4"
																		},
																		"nativeSrc": "3638:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3638:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3585:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3585:43:4"
																},
																"nativeSrc": "3585:71:4",
																"nodeType": "YulFunctionCall",
																"src": "3585:71:4"
															},
															"nativeSrc": "3585:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "3585:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3441:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3511:9:4",
														"nodeType": "YulTypedName",
														"src": "3511:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3523:6:4",
														"nodeType": "YulTypedName",
														"src": "3523:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3534:4:4",
														"nodeType": "YulTypedName",
														"src": "3534:4:4",
														"type": ""
													}
												],
												"src": "3441:222:4"
											},
											{
												"body": {
													"nativeSrc": "3697:152:4",
													"nodeType": "YulBlock",
													"src": "3697:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3714:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3714:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3717:77:4",
																		"nodeType": "YulLiteral",
																		"src": "3717:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3707:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3707:6:4"
																},
																"nativeSrc": "3707:88:4",
																"nodeType": "YulFunctionCall",
																"src": "3707:88:4"
															},
															"nativeSrc": "3707:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "3707:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3811:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3811:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3814:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3814:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3804:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3804:6:4"
																},
																"nativeSrc": "3804:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3804:15:4"
															},
															"nativeSrc": "3804:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3804:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3835:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3835:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3838:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3838:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3828:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3828:6:4"
																},
																"nativeSrc": "3828:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3828:15:4"
															},
															"nativeSrc": "3828:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3828:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3669:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "3669:180:4"
											},
											{
												"body": {
													"nativeSrc": "3900:149:4",
													"nodeType": "YulBlock",
													"src": "3900:149:4",
													"statements": [
														{
															"nativeSrc": "3910:25:4",
															"nodeType": "YulAssignment",
															"src": "3910:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3933:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3933:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3915:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3915:17:4"
																},
																"nativeSrc": "3915:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3915:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3910:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3910:1:4"
																}
															]
														},
														{
															"nativeSrc": "3944:25:4",
															"nodeType": "YulAssignment",
															"src": "3944:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3967:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3967:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3949:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3949:17:4"
																},
																"nativeSrc": "3949:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3949:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3944:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3944:1:4"
																}
															]
														},
														{
															"nativeSrc": "3978:17:4",
															"nodeType": "YulAssignment",
															"src": "3978:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3990:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3990:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3993:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3993:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3986:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3986:3:4"
																},
																"nativeSrc": "3986:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3986:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3978:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3978:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4020:22:4",
																"nodeType": "YulBlock",
																"src": "4020:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4022:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4022:16:4"
																			},
																			"nativeSrc": "4022:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4022:18:4"
																		},
																		"nativeSrc": "4022:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4022:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4011:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "4011:4:4"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4017:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4017:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4008:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4008:2:4"
																},
																"nativeSrc": "4008:11:4",
																"nodeType": "YulFunctionCall",
																"src": "4008:11:4"
															},
															"nativeSrc": "4005:37:4",
															"nodeType": "YulIf",
															"src": "4005:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3855:194:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3886:1:4",
														"nodeType": "YulTypedName",
														"src": "3886:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3889:1:4",
														"nodeType": "YulTypedName",
														"src": "3889:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3895:4:4",
														"nodeType": "YulTypedName",
														"src": "3895:4:4",
														"type": ""
													}
												],
												"src": "3855:194:4"
											},
											{
												"body": {
													"nativeSrc": "4181:206:4",
													"nodeType": "YulBlock",
													"src": "4181:206:4",
													"statements": [
														{
															"nativeSrc": "4191:26:4",
															"nodeType": "YulAssignment",
															"src": "4191:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4203:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4203:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4214:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4199:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4199:3:4"
																},
																"nativeSrc": "4199:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4199:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4191:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4191:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4271:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4271:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4284:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4284:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4295:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4295:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4280:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4280:3:4"
																		},
																		"nativeSrc": "4280:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4280:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4227:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4227:43:4"
																},
																"nativeSrc": "4227:71:4",
																"nodeType": "YulFunctionCall",
																"src": "4227:71:4"
															},
															"nativeSrc": "4227:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "4227:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4352:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4352:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4365:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4376:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4376:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4361:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:4"
																		},
																		"nativeSrc": "4361:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4361:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4308:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4308:43:4"
																},
																"nativeSrc": "4308:72:4",
																"nodeType": "YulFunctionCall",
																"src": "4308:72:4"
															},
															"nativeSrc": "4308:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "4308:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4055:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4145:9:4",
														"nodeType": "YulTypedName",
														"src": "4145:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4157:6:4",
														"nodeType": "YulTypedName",
														"src": "4157:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4165:6:4",
														"nodeType": "YulTypedName",
														"src": "4165:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4176:4:4",
														"nodeType": "YulTypedName",
														"src": "4176:4:4",
														"type": ""
													}
												],
												"src": "4055:332:4"
											},
											{
												"body": {
													"nativeSrc": "4437:147:4",
													"nodeType": "YulBlock",
													"src": "4437:147:4",
													"statements": [
														{
															"nativeSrc": "4447:25:4",
															"nodeType": "YulAssignment",
															"src": "4447:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4470:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4470:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4452:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "4452:17:4"
																},
																"nativeSrc": "4452:20:4",
																"nodeType": "YulFunctionCall",
																"src": "4452:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4447:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "4447:1:4"
																}
															]
														},
														{
															"nativeSrc": "4481:25:4",
															"nodeType": "YulAssignment",
															"src": "4481:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4504:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4504:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4486:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "4486:17:4"
																},
																"nativeSrc": "4486:20:4",
																"nodeType": "YulFunctionCall",
																"src": "4486:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4481:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "4481:1:4"
																}
															]
														},
														{
															"nativeSrc": "4515:16:4",
															"nodeType": "YulAssignment",
															"src": "4515:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4526:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4526:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4529:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4529:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4522:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4522:3:4"
																},
																"nativeSrc": "4522:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4522:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4515:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4515:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4555:22:4",
																"nodeType": "YulBlock",
																"src": "4555:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4557:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4557:16:4"
																			},
																			"nativeSrc": "4557:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4557:18:4"
																		},
																		"nativeSrc": "4557:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4557:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4547:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4547:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4550:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4550:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4544:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4544:2:4"
																},
																"nativeSrc": "4544:10:4",
																"nodeType": "YulFunctionCall",
																"src": "4544:10:4"
															},
															"nativeSrc": "4541:36:4",
															"nodeType": "YulIf",
															"src": "4541:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4393:191:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4424:1:4",
														"nodeType": "YulTypedName",
														"src": "4424:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4427:1:4",
														"nodeType": "YulTypedName",
														"src": "4427:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4433:3:4",
														"nodeType": "YulTypedName",
														"src": "4433:3:4",
														"type": ""
													}
												],
												"src": "4393:191:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IBUSDT_$276(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IBUSDT_$276(value) {\n        if iszero(eq(value, cleanup_t_contract$_IBUSDT_$276(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IBUSDT_$276(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IBUSDT_$276(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IBUSDT_$276t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IBUSDT_$276(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c80638da5cb5b116100645780638da5cb5b146101075780639d76ea58146101255780639dc29fac14610143578063b69ef8a81461015f578063f2fde38b1461017d57610091565b80633736f85d1461009557806340c10f19146100c55780636cb08859146100e1578063715018a6146100fd575b5f80fd5b6100af60048036038101906100aa91906106bd565b610199565b6040516100bc9190610700565b60405180910390f35b6100df60048036038101906100da919061077e565b6101ae565b005b6100fb60048036038101906100f691906107bc565b6102b6565b005b610105610315565b005b61010f610328565b60405161011c9190610809565b60405180910390f35b61012d61034f565b60405161013a9190610809565b60405180910390f35b61015d6004803603810190610158919061077e565b610374565b005b610167610486565b6040516101749190610700565b60405180910390f35b610197600480360381019061019291906106bd565b61048c565b005b6003602052805f5260405f205f915090505481565b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156101f7575f80fd5b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610243919061084f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401610285929190610882565b5f604051808303815f87803b15801561029c575f80fd5b505af11580156102ae573d5f803e3d5ffd5b505050505050565b6102be610510565b8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461030a91906108a9565b925050819055505050565b61031d610510565b6103265f610597565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146103cc575f80fd5b8173ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b8152600401610407929190610882565b5f604051808303815f87803b15801561041e575f80fd5b505af1158015610430573d5f803e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58260405161047a9190610700565b60405180910390a25050565b60015481565b610494610510565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610504575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104fb9190610809565b60405180910390fd5b61050d81610597565b50565b610518610658565b73ffffffffffffffffffffffffffffffffffffffff16610536610328565b73ffffffffffffffffffffffffffffffffffffffff161461059557610559610658565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161058c9190610809565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61068c82610663565b9050919050565b61069c81610682565b81146106a6575f80fd5b50565b5f813590506106b781610693565b92915050565b5f602082840312156106d2576106d161065f565b5b5f6106df848285016106a9565b91505092915050565b5f819050919050565b6106fa816106e8565b82525050565b5f6020820190506107135f8301846106f1565b92915050565b5f61072382610682565b9050919050565b61073381610719565b811461073d575f80fd5b50565b5f8135905061074e8161072a565b92915050565b61075d816106e8565b8114610767575f80fd5b50565b5f8135905061077881610754565b92915050565b5f80604083850312156107945761079361065f565b5b5f6107a185828601610740565b92505060206107b28582860161076a565b9150509250929050565b5f80604083850312156107d2576107d161065f565b5b5f6107df858286016106a9565b92505060206107f08582860161076a565b9150509250929050565b61080381610682565b82525050565b5f60208201905061081c5f8301846107fa565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610859826106e8565b9150610864836106e8565b925082820390508181111561087c5761087b610822565b5b92915050565b5f6040820190506108955f8301856107fa565b6108a260208301846106f1565b9392505050565b5f6108b3826106e8565b91506108be836106e8565b92508282019050808211156108d6576108d5610822565b5b9291505056fea26469706673582212200712f6f2a8bc390f1020726a5d1b0079c3eb590caf8a963c611bf8e95a42d9f964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x17D JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x3736F85D EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x6CB08859 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x1AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x2B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x105 PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10F PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x374 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x167 PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x84F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP3 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x510 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x8A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x31D PUSH2 0x510 JUMP JUMPDEST PUSH2 0x326 PUSH0 PUSH2 0x597 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x407 SWAP3 SWAP2 SWAP1 PUSH2 0x882 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x430 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x494 PUSH2 0x510 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x504 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50D DUP2 PUSH2 0x597 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x518 PUSH2 0x658 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x536 PUSH2 0x328 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x595 JUMPI PUSH2 0x559 PUSH2 0x658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x68C DUP3 PUSH2 0x663 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x69C DUP2 PUSH2 0x682 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B7 DUP2 PUSH2 0x693 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D2 JUMPI PUSH2 0x6D1 PUSH2 0x65F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6DF DUP5 DUP3 DUP6 ADD PUSH2 0x6A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FA DUP2 PUSH2 0x6E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x713 PUSH0 DUP4 ADD DUP5 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x723 DUP3 PUSH2 0x682 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x733 DUP2 PUSH2 0x719 JUMP JUMPDEST DUP2 EQ PUSH2 0x73D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x74E DUP2 PUSH2 0x72A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x75D DUP2 PUSH2 0x6E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x767 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x778 DUP2 PUSH2 0x754 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x794 JUMPI PUSH2 0x793 PUSH2 0x65F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7A1 DUP6 DUP3 DUP7 ADD PUSH2 0x740 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7B2 DUP6 DUP3 DUP7 ADD PUSH2 0x76A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D2 JUMPI PUSH2 0x7D1 PUSH2 0x65F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7DF DUP6 DUP3 DUP7 ADD PUSH2 0x6A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7F0 DUP6 DUP3 DUP7 ADD PUSH2 0x76A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x803 DUP2 PUSH2 0x682 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x81C PUSH0 DUP4 ADD DUP5 PUSH2 0x7FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x859 DUP3 PUSH2 0x6E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x864 DUP4 PUSH2 0x6E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x87C JUMPI PUSH2 0x87B PUSH2 0x822 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x895 PUSH0 DUP4 ADD DUP6 PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x8A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8B3 DUP3 PUSH2 0x6E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x8BE DUP4 PUSH2 0x6E8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8D6 JUMPI PUSH2 0x8D5 PUSH2 0x822 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SLT 0xF6 CALLCODE 0xA8 0xBC CODECOPY 0xF LT KECCAK256 PUSH19 0x6A5D1B0079C3EB590CAF8A963C611BF8E95A42 0xD9 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "319:897:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;466:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;629:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1073:141;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;378:27:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;853:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;350:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;466:49:3;;;;;;;;;;;;;;;;;:::o;629:219::-;737:7;707:14;:26;722:10;707:26;;;;;;;;;;;;;;;;:37;;699:46;;;;;;785:7;755:14;:26;770:10;755:26;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;802:13;:18;;;821:10;833:7;802:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:219;;:::o;1073:141::-;1531:13:0;:11;:13::i;:::-;1200:7:3::1;1169:14;:27;1184:11;1169:27;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;1073:141:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;378:27:3:-;;;;;;;;;;;;;:::o;853:213::-;957:12;;;;;;;;;;;931:38;;939:13;931:38;;;923:47;;;;;;980:13;:18;;;999:10;1011:7;980:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1039:10;1034:25;;;1051:7;1034:25;;;;;;:::i;:::-;;;;;;;;853:213;;:::o;350:22::-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:110::-;1662:7;1691:24;1709:5;1691:24;:::i;:::-;1680:35;;1611:110;;;:::o;1727:150::-;1814:38;1846:5;1814:38;:::i;:::-;1807:5;1804:49;1794:77;;1867:1;1864;1857:12;1794:77;1727:150;:::o;1883:167::-;1943:5;1981:6;1968:20;1959:29;;1997:47;2038:5;1997:47;:::i;:::-;1883:167;;;;:::o;2056:122::-;2129:24;2147:5;2129:24;:::i;:::-;2122:5;2119:35;2109:63;;2168:1;2165;2158:12;2109:63;2056:122;:::o;2184:139::-;2230:5;2268:6;2255:20;2246:29;;2284:33;2311:5;2284:33;:::i;:::-;2184:139;;;;:::o;2329:502::-;2411:6;2419;2468:2;2456:9;2447:7;2443:23;2439:32;2436:119;;;2474:79;;:::i;:::-;2436:119;2594:1;2619:67;2678:7;2669:6;2658:9;2654:22;2619:67;:::i;:::-;2609:77;;2565:131;2735:2;2761:53;2806:7;2797:6;2786:9;2782:22;2761:53;:::i;:::-;2751:63;;2706:118;2329:502;;;;;:::o;2837:474::-;2905:6;2913;2962:2;2950:9;2941:7;2937:23;2933:32;2930:119;;;2968:79;;:::i;:::-;2930:119;3088:1;3113:53;3158:7;3149:6;3138:9;3134:22;3113:53;:::i;:::-;3103:63;;3059:117;3215:2;3241:53;3286:7;3277:6;3266:9;3262:22;3241:53;:::i;:::-;3231:63;;3186:118;2837:474;;;;;:::o;3317:118::-;3404:24;3422:5;3404:24;:::i;:::-;3399:3;3392:37;3317:118;;:::o;3441:222::-;3534:4;3572:2;3561:9;3557:18;3549:26;;3585:71;3653:1;3642:9;3638:17;3629:6;3585:71;:::i;:::-;3441:222;;;;:::o;3669:180::-;3717:77;3714:1;3707:88;3814:4;3811:1;3804:15;3838:4;3835:1;3828:15;3855:194;3895:4;3915:20;3933:1;3915:20;:::i;:::-;3910:25;;3949:20;3967:1;3949:20;:::i;:::-;3944:25;;3993:1;3990;3986:9;3978:17;;4017:1;4011:4;4008:11;4005:37;;;4022:18;;:::i;:::-;4005:37;3855:194;;;;:::o;4055:332::-;4176:4;4214:2;4203:9;4199:18;4191:26;;4227:71;4295:1;4284:9;4280:17;4271:6;4227:71;:::i;:::-;4308:72;4376:2;4365:9;4361:18;4352:6;4308:72;:::i;:::-;4055:332;;;;;:::o;4393:191::-;4433:3;4452:20;4470:1;4452:20;:::i;:::-;4447:25;;4486:20;4504:1;4486:20;:::i;:::-;4481:25;;4529:1;4526;4522:9;4515:16;;4550:3;4547:1;4544:10;4541:36;;;4557:18;;:::i;:::-;4541:36;4393:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "464400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balance()": "2491",
								"burn(address,uint256)": "infinite",
								"burnedOnOppositeChain(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"owner()": "2515",
								"pendingBalance(address)": "2803",
								"renounceOwnership()": "infinite",
								"tokenAddress()": "2530",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 319,
									"end": 1216,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 319,
									"end": 1216,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 319,
									"end": 1216,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 522,
									"end": 622,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 522,
									"end": 622,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 522,
									"end": 622,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 522,
									"end": 622,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 522,
									"end": 622,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 522,
									"end": 622,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 522,
									"end": 622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 522,
									"end": 622,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 565,
									"end": 575,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 602,
									"end": 615,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 587,
									"end": 599,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 587,
									"end": 599,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 587,
									"end": 615,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 522,
									"end": 622,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 319,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 319,
									"end": 1216,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 319,
									"end": 1216,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 319,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 319,
									"end": 1216,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 1216,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 319,
									"end": 1216,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 319,
									"end": 1216,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 1216,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 319,
									"end": 1216,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 1216,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200712f6f2a8bc390f1020726a5d1b0079c3eb590caf8a963c611bf8e95a42d9f964736f6c634300081a0033",
									".code": [
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "9D76EA58"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "9DC29FAC"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "B69EF8A8"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "3736F85D"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "6CB08859"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 1216,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 466,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 466,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 466,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 629,
											"end": 848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 629,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 629,
											"end": 848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 629,
											"end": 848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 629,
											"end": 848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 629,
											"end": 848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 629,
											"end": 848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1073,
											"end": 1214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1073,
											"end": 1214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 378,
											"end": 405,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 378,
											"end": 405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 378,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 378,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 378,
											"end": 405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 405,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 378,
											"end": 405,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 378,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 378,
											"end": 405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 405,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 853,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 853,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 350,
											"end": 372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 350,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 350,
											"end": 372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 350,
											"end": 372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 350,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 350,
											"end": 372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 372,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 515,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 515,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 629,
											"end": 848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 737,
											"end": 744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 707,
											"end": 721,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 707,
											"end": 733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 732,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 707,
											"end": 733,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 707,
											"end": 733,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 707,
											"end": 733,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 707,
											"end": 733,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 707,
											"end": 733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 707,
											"end": 733,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 707,
											"end": 733,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 707,
											"end": 733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 707,
											"end": 733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 707,
											"end": 733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 707,
											"end": 733,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 707,
											"end": 733,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 707,
											"end": 733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 707,
											"end": 733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 733,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 707,
											"end": 733,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 707,
											"end": 744,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 707,
											"end": 744,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 699,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 699,
											"end": 745,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 699,
											"end": 745,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 745,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 699,
											"end": 745,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 699,
											"end": 745,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 699,
											"end": 745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 785,
											"end": 792,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 755,
											"end": 781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 780,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 755,
											"end": 781,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 755,
											"end": 781,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 755,
											"end": 781,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 755,
											"end": 781,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 781,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 755,
											"end": 781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 755,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 755,
											"end": 792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 755,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 802,
											"end": 815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 802,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 802,
											"end": 820,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 802,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 821,
											"end": 831,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 833,
											"end": 840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 802,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 802,
											"end": 841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 802,
											"end": 841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 629,
											"end": 848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 1207,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1195,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1169,
											"end": 1207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1207,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 378,
											"end": 405,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 378,
											"end": 405,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 405,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 378,
											"end": 405,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 378,
											"end": 405,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 378,
											"end": 405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 957,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 957,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 957,
											"end": 969,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 957,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 957,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 957,
											"end": 969,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 957,
											"end": 969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 957,
											"end": 969,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 957,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 931,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 931,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 939,
											"end": 952,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 931,
											"end": 969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 931,
											"end": 969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 931,
											"end": 969,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 923,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 923,
											"end": 970,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 923,
											"end": 970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 970,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 923,
											"end": 970,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 923,
											"end": 970,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 923,
											"end": 970,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 980,
											"end": 993,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 980,
											"end": 998,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 980,
											"end": 998,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 980,
											"end": 998,
											"name": "PUSH",
											"source": 3,
											"value": "9DC29FAC"
										},
										{
											"begin": 999,
											"end": 1009,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 980,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 980,
											"end": 1019,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "PUSH",
											"source": 3,
											"value": "CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
										},
										{
											"begin": 1051,
											"end": 1058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1034,
											"end": 1059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1034,
											"end": 1059,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 853,
											"end": 1066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 372,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 350,
											"end": 372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1721,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1611,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1709,
											"end": 1714,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1691,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1691,
											"end": 1715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1691,
											"end": 1715,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1691,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1877,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1727,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1846,
											"end": 1851,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1814,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 1852,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1814,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1804,
											"end": 1853,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1794,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1794,
											"end": 1871,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1794,
											"end": 1871,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1794,
											"end": 1871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 2050,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1883,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1948,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1968,
											"end": 1988,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2038,
											"end": 2043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1997,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2044,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1997,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 2050,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 2050,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 2050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 2050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 2050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2178,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2056,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2129,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2147,
											"end": 2152,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2129,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2129,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2129,
											"end": 2153,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2129,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2127,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2154,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2109,
											"end": 2172,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2170,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2172,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2109,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2184,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2230,
											"end": 2235,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2274,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2255,
											"end": 2275,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2246,
											"end": 2275,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2246,
											"end": 2275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2284,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2311,
											"end": 2316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2284,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2284,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2284,
											"end": 2317,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2284,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2323,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2323,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2831,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2329,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2411,
											"end": 2417,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2470,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2456,
											"end": 2465,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2454,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2466,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2471,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2555,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2436,
											"end": 2555,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2474,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2474,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2553,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2474,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2555,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2436,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2594,
											"end": 2595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2678,
											"end": 2685,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2675,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2658,
											"end": 2667,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2676,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2619,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2619,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2619,
											"end": 2686,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2619,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2686,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2737,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2806,
											"end": 2813,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2795,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 2804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2761,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2814,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2761,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2814,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2706,
											"end": 2824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 3311,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2837,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2911,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 2964,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 2959,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 2948,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2937,
											"end": 2960,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2933,
											"end": 2965,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 3049,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2930,
											"end": 3049,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2968,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2968,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 3047,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2968,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2930,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3089,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3158,
											"end": 3165,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3149,
											"end": 3155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3138,
											"end": 3147,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3113,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3113,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3113,
											"end": 3166,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3113,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3166,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3059,
											"end": 3176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3217,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3241,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3286,
											"end": 3293,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3283,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3275,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3262,
											"end": 3284,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3241,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3294,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3241,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3231,
											"end": 3294,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3231,
											"end": 3294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3186,
											"end": 3304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 3311,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 3311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 3311,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 3311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 3311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 3311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3435,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3317,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3422,
											"end": 3427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3404,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3404,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3663,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3441,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3574,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3570,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3575,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3653,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3655,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3629,
											"end": 3635,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3585,
											"end": 3656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3656,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3585,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3663,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3663,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3663,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3663,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3441,
											"end": 3663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3849,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3669,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3717,
											"end": 3794,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3714,
											"end": 3715,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3795,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3811,
											"end": 3812,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3804,
											"end": 3819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3842,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3835,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3843,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3855,
											"end": 4049,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3855,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3915,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3933,
											"end": 3934,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3915,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3935,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3915,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3910,
											"end": 3935,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3910,
											"end": 3935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3967,
											"end": 3968,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3949,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 3969,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3949,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3944,
											"end": 3969,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3944,
											"end": 3969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3993,
											"end": 3994,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 3991,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 3995,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3978,
											"end": 3995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4018,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4011,
											"end": 4015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4019,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4042,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4005,
											"end": 4042,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4022,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4022,
											"end": 4040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4022,
											"end": 4040,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4022,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4042,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4005,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3855,
											"end": 4049,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3855,
											"end": 4049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3855,
											"end": 4049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3855,
											"end": 4049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3855,
											"end": 4049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4387,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4055,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4176,
											"end": 4180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4212,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4227,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4293,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4277,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4227,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4227,
											"end": 4298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4227,
											"end": 4298,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4227,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4374,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4308,
											"end": 4380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4308,
											"end": 4380,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4308,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4387,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4387,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4055,
											"end": 4387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4393,
											"end": 4584,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4393,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4433,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4470,
											"end": 4471,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4452,
											"end": 4472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4452,
											"end": 4472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4452,
											"end": 4472,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4452,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4447,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4486,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4504,
											"end": 4505,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4486,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4486,
											"end": 4506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4486,
											"end": 4506,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4486,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4506,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4530,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4526,
											"end": 4527,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4522,
											"end": 4531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4550,
											"end": 4553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4548,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4544,
											"end": 4554,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4577,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4541,
											"end": 4577,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4557,
											"end": 4575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4577,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4541,
											"end": 4577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4393,
											"end": 4584,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4393,
											"end": 4584,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4393,
											"end": 4584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4393,
											"end": 4584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4393,
											"end": 4584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"src/Bridge.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balance()": "b69ef8a8",
							"burn(address,uint256)": "9dc29fac",
							"burnedOnOppositeChain(address,uint256)": "6cb08859",
							"mint(address,uint256)": "40c10f19",
							"owner()": "8da5cb5b",
							"pendingBalance(address)": "3736f85d",
							"renounceOwnership()": "715018a6",
							"tokenAddress()": "9d76ea58",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBUSDT\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnedOnOppositeChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBUSDT\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Bridge.sol\":\"Bridge\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/Bridge.sol\":{\"keccak256\":\"0x9167ed59ab1987afbb057a20a174514372905c60ee799a8ebd94518efe122e2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6074703acad06c066a1b7264ba0fafe7b686887c614468ee3b5335c8eeb14962\",\"dweb:/ipfs/QmXV4J9ZotcudejZd43yAHME2BDeeH13vs1WuxMKGjT3be\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "src/Bridge.sol:Bridge",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 280,
								"contract": "src/Bridge.sol:Bridge",
								"label": "balance",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 282,
								"contract": "src/Bridge.sol:Bridge",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 292,
								"contract": "src/Bridge.sol:Bridge",
								"label": "pendingBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBUSDT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Bridge.sol\":\"IBUSDT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/Bridge.sol\":{\"keccak256\":\"0x9167ed59ab1987afbb057a20a174514372905c60ee799a8ebd94518efe122e2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6074703acad06c066a1b7264ba0fafe7b686887c614468ee3b5335c8eeb14962\",\"dweb:/ipfs/QmXV4J9ZotcudejZd43yAHME2BDeeH13vs1WuxMKGjT3be\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"src/Bridge.sol": {
				"ast": {
					"absolutePath": "src/Bridge.sol",
					"exportedSymbols": {
						"Bridge": [
							388
						],
						"Context": [
							255
						],
						"IBUSDT": [
							276
						],
						"IERC20": [
							225
						],
						"Ownable": [
							147
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 389,
							"sourceUnit": 226,
							"src": "58:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 389,
							"sourceUnit": 148,
							"src": "115:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 260,
										"name": "IERC20",
										"nameLocations": [
											"189:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "189:6:3"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "189:6:3"
								}
							],
							"canonicalName": "IBUSDT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 276,
							"linearizedBaseContracts": [
								276,
								225
							],
							"name": "IBUSDT",
							"nameLocation": "179:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "211:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "224:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "216:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "237:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "229:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "215:30:3"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:0:3"
									},
									"scope": 276,
									"src": "202:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dc29fac",
									"id": 275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "269:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "282:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "274:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "297:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "289:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "273:32:3"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:0:3"
									},
									"scope": 276,
									"src": "260:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "169:148:3",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 277,
										"name": "Ownable",
										"nameLocations": [
											"338:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "338:7:3"
									},
									"id": 278,
									"nodeType": "InheritanceSpecifier",
									"src": "338:7:3"
								}
							],
							"canonicalName": "Bridge",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 388,
							"linearizedBaseContracts": [
								388,
								147,
								255
							],
							"name": "Bridge",
							"nameLocation": "328:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b69ef8a8",
									"id": 280,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "365:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 388,
									"src": "350:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 279,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "350:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 282,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "393:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 388,
									"src": "378:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 281,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "378:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5",
									"id": 288,
									"name": "Burn",
									"nameLocation": "418:4:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"indexed": true,
												"mutability": "mutable",
												"name": "burner",
												"nameLocation": "439:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "423:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "452:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "447:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "447:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:37:3"
									},
									"src": "412:48:3"
								},
								{
									"constant": false,
									"functionSelector": "3736f85d",
									"id": 292,
									"mutability": "mutable",
									"name": "pendingBalance",
									"nameLocation": "501:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 388,
									"src": "466:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 291,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 289,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "474:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "466:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 290,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "485:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "577:45:3",
										"statements": [
											{
												"expression": {
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 301,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "587:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 302,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "602:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "587:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "587:28:3"
											}
										]
									},
									"id": 306,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 297,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "565:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "569:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "565:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 299,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 296,
												"name": "Ownable",
												"nameLocations": [
													"557:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "557:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "557:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "542:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "534:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:23:3"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "577:0:3"
									},
									"scope": 388,
									"src": "522:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "689:159:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 315,
																	"name": "pendingBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "707:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 318,
																"indexExpression": {
																	"expression": {
																		"id": 316,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "722:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "726:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "722:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "707:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 319,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "737:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "699:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "699:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "699:46:3"
											},
											{
												"expression": {
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 323,
															"name": "pendingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "755:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 326,
														"indexExpression": {
															"expression": {
																"id": 324,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "770:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "774:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "770:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "755:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 327,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "785:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "755:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "755:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 333,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "821:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "825:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "821:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "833:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 330,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "802:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBUSDT_$276",
																"typeString": "contract IBUSDT"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "816:4:3",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "802:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "802:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "802:39:3"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "638:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "650:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "643:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBUSDT_$276",
													"typeString": "contract IBUSDT"
												},
												"typeName": {
													"id": 308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 307,
														"name": "IBUSDT",
														"nameLocations": [
															"643:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 276,
														"src": "643:6:3"
													},
													"referencedDeclaration": 276,
													"src": "643:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBUSDT_$276",
														"typeString": "contract IBUSDT"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "665:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:39:3"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:3"
									},
									"scope": 388,
									"src": "629:219:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "913:153:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 350,
																		"name": "_tokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "939:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBUSDT_$276",
																			"typeString": "contract IBUSDT"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IBUSDT_$276",
																			"typeString": "contract IBUSDT"
																		}
																	],
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "931:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 348,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "931:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "931:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 352,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "957:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "931:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "923:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "923:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "923:47:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 359,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "999:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1003:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "999:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 361,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "1011:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 356,
															"name": "_tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "980:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBUSDT_$276",
																"typeString": "contract IBUSDT"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "994:4:3",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 275,
														"src": "980:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "980:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "980:39:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 365,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1039:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1043:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1039:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 367,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "1051:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "1034:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1034:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "EmitStatement",
												"src": "1029:30:3"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "862:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "874:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "867:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBUSDT_$276",
													"typeString": "contract IBUSDT"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IBUSDT",
														"nameLocations": [
															"867:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 276,
														"src": "867:6:3"
													},
													"referencedDeclaration": 276,
													"src": "867:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBUSDT_$276",
														"typeString": "contract IBUSDT"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "897:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "889:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:39:3"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:3"
									},
									"scope": 388,
									"src": "853:213:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1159:55:3",
										"statements": [
											{
												"expression": {
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 380,
															"name": "pendingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "1169:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 382,
														"indexExpression": {
															"id": 381,
															"name": "userAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "1184:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1169:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 383,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "1200:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1169:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1169:38:3"
											}
										]
									},
									"functionSelector": "6cb08859",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 378,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 377,
												"name": "onlyOwner",
												"nameLocations": [
													"1149:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1149:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:9:3"
										}
									],
									"name": "burnedOnOppositeChain",
									"nameLocation": "1082:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "userAccount",
												"nameLocation": "1112:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1104:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1133:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1125:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:38:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1159:0:3"
									},
									"scope": 388,
									"src": "1073:141:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 389,
							"src": "319:897:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								288
							]
						}
					],
					"src": "32:1184:3"
				},
				"id": 3
			}
		}
	}
}